# Adapted from: https://github.com/rackspace-orchestration-templates/galera-rc
heat_template_version: 2016-10-14

description: |
  #### Test of a Heat ResourceGroup

parameter_groups:
- label: Server Settings
  parameters:
  - server_count
- label: "Notifications"
  parameters:
  - email
- label: rax-dev-params
  parameters:
  - hostname_map
  - template
  - server_flavor
  - server_image
  - ssh_key

parameters:

  hostname_map:
    type: json
    default:
      '0': mwgdldhapee02
      '1': mwgdldhapee03
      '2': mwgdldhapee04
      '3': mwgdldhapee05
      '4': mwgdldhapee06
      '5': mwgdldhapee07
      '6': mwgdldhapee08
      '7': mwgdldhapee09
      '8': mwgdldhapee10
      '9': mwgdldhapee11
      '10': mwgdldhapee12
      '11': mwgdldhapee13
      '12': mwgdldhapee14
      '13': mwgdldhapee15
      '14': mwgdldhapee16
      '15': mwgdldhapee17
      '16': mwgdldhapee18
      '17': mwgdldhapee19
      '18': mwgdldhapee20
      '19': mwgdldhapee21
      '20': mwgdldhapee22
      '21': mwgdldhapee23
      '22': mwgdldhapee24
      '23': mwgdldhapee25
      '24': mwgdldhapee26

  server_flavor:
    type: string
    default: 1 GB General Purpose v1
    label: Server Flavor
    description: Flavor of Cloud Server to be used for all servers in this stack
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1

  server_count:
    type: number
    default: 2
    label: Number of servers
    description: Number of servers to build
    constraints:
      - range: { min: 1, max: 15 }

  server_image:
    type: string
    default: CentOS 7 (PVHVM) (Orchestration)
    label: Server Image
    description: Image to be used for all servers in this stack
    constraints:
    - allowed_values:
      - CentOS 7 (PVHVM) (Orchestration)
    immutable: true

  template:
    type: string
    default: https://raw.githubusercontent.com/patrickmslatteryvt/ResourceGroup/master/secondary.yaml
    label: Nested Template
    description: Template to use for nested servers

  ssh_key:
    label: SSH key pair
    type: string
    default: shared_initial_build_key
    constraints:
      - custom_constraint: nova.keypair
      - allowed_values:
        - shared_initial_build_key

  email:
    label: Email address
    description: |
      Enter your mywebgrocer.com email address, you will be sent an email when the system is ready for use.
    type: string
    default: username@mywebgrocer.com
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9_.+-]+@mywebgrocer.com$"
      description: |
        You must enter your mywebgrocer.com email address.

  lb_pools:
    hidden: true
    type: string
    default: "POOL-dmsapi.mywebgrocer.com-80;POOL-dmsapi.mywebgrocer.com-443;POOL-dmsapi.mywebgrocer.com-8243;POOL-dmsapi.mywebgrocer.com-8280;POOL-dmsapi.mywebgrocer.com-9243;POOL-dmsapi.mywebgrocer.com-9280"

resources:

  management_server:
    type: "OS::Nova::Server"
    properties:
      name: mwgdldhapee01
      user_data_update_policy: IGNORE
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
      key_name: { get_param: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
        stack-creator: { get_param: "email" }
#        build_config: "monitoring_defaults"
        RackConnectLBPool: { get_param: lb_pools }
      user_data_format: RAW
      config_drive: true
      user_data:
        str_replace:
          template: |
            #cloud-config
            package_upgrade: false
            runcmd:
              - git clone --depth=1 --branch=master http://10.223.80.79:3000/dms/server-setup.git /root/server-setup
              - rm -rf /root/server-setup/.git
              - export EMAIL=${EMAIL}
              - /root/server-setup/initial_install.sh
              - /root/server-setup/hapee_install.sh
              - /root/server-setup/conformity_monkey.sh brandcloud-hapee-tests
              # Reboot upon successful deployment
              - systemctl reboot
          params:
            "${EMAIL}": { get_param: email }

  servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: server_count }
      resource_def:
        type: { get_param: template }
        properties:
          ssh_key: { get_param: ssh_key }
          parent_stack_id: { get_param: "OS::stack_id" }
          server_image: { get_param: server_image }
          server_flavor: { get_param: server_flavor }
          name_map: {get_param: hostname_map}
          index: '%index%'

outputs:

  private_ip:
    description: ServiceNet (Private) IP address of management server
    value: { get_attr: management_server, networks, private, 0 }
