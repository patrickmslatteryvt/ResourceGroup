# Adapted from: https://github.com/rackspace-orchestration-templates/galera-rc
heat_template_version: 2015-10-15

description: |
  #### Production

  This stack is running the latest version of Galera 10.1.

parameter_groups:
- label: rax-dev-params
  parameters:
  - secondary_template
  - server_flavor
  - server_image
  - ssh_key

parameters:
  #Advanced Options
  server_flavor:
    type: string
    default: 1 GB General Purpose v1
    label: Server Flavor
    description: Flavor of Cloud Server to be used for all servers in this stack
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1

  server_count:
    type: number
    default: 3
    label: Number of Secondary Servers
    description: Number of secondary web nodes
    constraints:
      - range: { min: 0, max: 10 }

  server_image:
    type: string
    default: CentOS 7 (PVHVM) (Orchestration)
    label: Server Image
    description: Image to be used for all servers in this stack
    constraints:
    - allowed_values:
      - CentOS 7 (PVHVM) (Orchestration)
    immutable: true

  secondary_template:
    type: string
    default: https://raw.githubusercontent.com/patrickmslatteryvt/ResourceGroup/master/secondary.yaml
    label: Secondary Template
    description: Template to use for secondary servers

  ssh_key:
    label: SSH key pair
    type: string
    default: shared_initial_build_key
    constraints:
      - custom_constraint: nova.keypair
      - allowed_values:
        - shared_initial_build_key
resources:

#  ssh_key:
#    type: OS::Nova::KeyPair
#    properties:
#      name: { get_param: "OS::stack_id" }
#      save_private_key: true

  galera_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: "OS::stack_name" }
      image: { get_param: server_image }
      flavor: { get_param: server_flavor }
#      key_name: { get_resource: ssh_key }
      key_name: { get_param: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  galera_secondary:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: server_count }
      resource_def:
        type: { get_param: secondary_template }
        properties:
#          ssh_key: { get_resource: ssh_key }
          ssh_key: { get_param: ssh_key }
          parent_stack_id: { get_param: "OS::stack_id" }
          server_image: { get_param: server_image }
          server_flavor: { get_param: server_flavor }
          server_name:
            str_replace:
              template: stack-secondary-%index%
              params:
                stack: { get_param: "OS::stack_name" }

outputs:
